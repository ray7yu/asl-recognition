# -*- coding: utf-8 -*-
"""Hard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PLSIpmEo0L-AJGfv98SXpPXMvbtCTqtT
"""

def HardTest (X):
  from tensorflow.keras.applications.vgg16 import preprocess_input
  from tensorflow.keras.models import load_model
  from skimage.transform import resize
  from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
  from sklearn.preprocessing import OneHotEncoder
  import numpy as np


  model = load_model('./model2.h5')
  print("model 2 loaded")

  X = preprocess_input(X)
  X_resized = np.array([resize(image, (96, 96)) for image in X])

  y_pred = model.predict(X_resized)

  def getLabels(y_pred, threshold):
    y_pred_label = []
    for label in y_pred:
      append = False
      for prob in label:
        if prob >= threshold:
          y_pred_label.append(np.argmax(label) + 1)
          append = True
          break
      if not append:
        y_pred_label.append(-1)
    return np.array(y_pred_label)

  y_pred = getLabels(y_pred, .55)

  return y_pred